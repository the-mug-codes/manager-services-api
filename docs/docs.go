// Package docs Code generated by swaggo/swag at 2024-05-25 17:29:12.595726 -0300 -03 m=+1.049918668. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/contract/{id}": {
            "delete": {
                "description": "Removes a contract by idfrom database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Delete a Contract",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseNone"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/contracts": {
            "get": {
                "description": "Get all contracts from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Show All Contract",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMany-array_entities_Contract"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new contract in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Create a Contract",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.insertContract"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Contract"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/contracts/{id}": {
            "get": {
                "description": "Get a contract by idin database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Show a Contract",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Contract"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a ccontract by idin database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Change a Contract",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.updateContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Contract"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/helpdesk/tickets": {
            "get": {
                "description": "Get all helpdesk tickets from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HelpDesk - Tickets"
                ],
                "summary": "Show All HelpDesk Tickets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMany-array_entities_HelpDeskTicket"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new helpdesk ticket in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HelpDesk - Tickets"
                ],
                "summary": "Create a HelpDesk Ticket",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.insertHelpDeskTicket"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_HelpDeskTicket"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/helpdesk/tickets/:id/messages": {
            "get": {
                "description": "Get all messages from a helpdesk ticket from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HelpDesk - Tickets Messages"
                ],
                "summary": "Show All HelpDesk Ticket Messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMany-array_entities_HelpDeskTicketMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/helpdesk/tickets/messages": {
            "get": {
                "description": "Get all helpdesk tickets messages from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HelpDesk - Tickets Messages"
                ],
                "summary": "Show All HelpDesk Tickets Messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMany-array_entities_HelpDeskTicketMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new helpdesk ticket message in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HelpDesk - Tickets Messages"
                ],
                "summary": "Create a HelpDesk Ticket Message",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.insertTicketMessage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_HelpDeskTicketMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/helpdesk/tickets/messages/{id}": {
            "get": {
                "description": "Get a helpdesk ticket message by idin database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HelpDesk - Tickets Messages"
                ],
                "summary": "Show a HelpDesk Ticket Message",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_HelpDeskTicketMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/helpdesk/tickets/{id}": {
            "get": {
                "description": "Get a helpdesk ticket by idin database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HelpDesk - Tickets"
                ],
                "summary": "Show a HelpDesk Ticket",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_HelpDeskTicket"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a helpdesk ticket by idin database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HelpDesk - Tickets"
                ],
                "summary": "Change a HelpDesk Ticket",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.updateHelpDeskTicket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_HelpDeskTicket"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a helpdesk ticket by idfrom database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HelpDesk - Tickets"
                ],
                "summary": "Delete a HelpDesk Ticket",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseNone"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/invoices": {
            "get": {
                "description": "Get all invoices from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Show All Invoices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMany-array_entities_Invoice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new invoice in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Create a Invoice",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.insertInvoice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Invoice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/invoices/charge/:id": {
            "post": {
                "description": "Creates a new invoice charge by invoice id in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Create a Invoice Charge",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.insertCharge"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Invoice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/invoices/notifications/:id": {
            "post": {
                "description": "Creates a new invoice notification by invoice id in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Create a Invoice Notification",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.insertNotification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Invoice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/invoices/payments/:id": {
            "post": {
                "description": "Creates a new invoice payment method by invoice id in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Create a Invoice Payment Method",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.insertPayment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Invoice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/invoices/pdf/{id}": {
            "get": {
                "description": "Get a invoice pdf file by idin database.",
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Show a Invoice PDF File",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/invoices/{id}": {
            "get": {
                "description": "Get a invoice by idin database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Show a Invoice",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Invoice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/labels": {
            "get": {
                "description": "Get all labels from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "Show All Labels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMany-array_entities_Label"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new label in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "Create a Label",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.insertLabel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Label"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/labels/{id}": {
            "get": {
                "description": "Get a label by idin database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "Show a Label",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Label"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a label by idin database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "Change a Label",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.updateLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Label"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a label by idfrom database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "Delete a Label",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseNone"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/people": {
            "get": {
                "description": "Get all people from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Show All People",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMany-array_entities_Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new person in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Create a Person",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.insertPerson"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/people/{id}": {
            "get": {
                "description": "Get a person by idin database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Show a Person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "phone number",
                        "name": "phone-number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a person by idin database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Change a Person",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.updatePerson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a person by idfrom database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Delete a Person",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseNone"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Get all products from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Show All Products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMany-array_entities_Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new product in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create a Product",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.insertProduct"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/products/categories": {
            "get": {
                "description": "Get all products categories from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products - Categories"
                ],
                "summary": "Show All Products Categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMany-array_entities_ProductCategory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new product category in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products - Categories"
                ],
                "summary": "Create a Product Category",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.insertProductCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_ProductCategory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/products/categories/{id}": {
            "get": {
                "description": "Get a product category by idin database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products - Categories"
                ],
                "summary": "Show a Product Category",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_ProductCategory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a product category by idin database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products - Categories"
                ],
                "summary": "Change a Product Category",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.updateProductCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_ProductCategory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a product category by idfrom database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products - Categories"
                ],
                "summary": "Delete a Product Category",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseNone"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Get a product by idin database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Show a Products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a product by idin database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Change a Product",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.updateProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a product by idfrom database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete a Product",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseNone"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "description": "Get all projects from database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Show All Projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseMany-array_entities_Project"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new project in database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Create a Project",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.insertProject"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Project"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "description": "Get a project by idin database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Show a Project",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a project by idin database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Change a Project",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attachment.updateProject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseOne-entities_Project"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a project by idfrom database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Delete a Project",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseNone"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "attachment.insertCharge": {
            "type": "object",
            "properties": {
                "amount_value": {
                    "type": "number"
                },
                "comments": {
                    "type": "string"
                },
                "contract_id": {
                    "type": "string"
                },
                "contract_title": {
                    "type": "string"
                },
                "discount_comments": {
                    "type": "string"
                },
                "discount_value": {
                    "type": "number"
                },
                "extra_amount_comments": {
                    "type": "string"
                },
                "extra_amount_value": {
                    "type": "number"
                },
                "installment_number": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.InvoiceItem"
                    }
                },
                "late_invoices": {
                    "type": "boolean"
                },
                "notification": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "boolean"
                        },
                        "whatsapp": {
                            "type": "boolean"
                        }
                    }
                },
                "payment": {
                    "type": "object",
                    "properties": {
                        "bank_slip": {
                            "type": "boolean"
                        },
                        "pix": {
                            "type": "boolean"
                        }
                    }
                },
                "person_id": {
                    "type": "string"
                },
                "total_amount_value": {
                    "type": "number"
                },
                "warning_comments": {
                    "type": "string"
                }
            }
        },
        "attachment.insertContract": {
            "type": "object",
            "required": [
                "amount_value",
                "comments",
                "contract_model",
                "description",
                "discount_value",
                "due_date",
                "extra_amount_value",
                "total_amount_value"
            ],
            "properties": {
                "amount_value": {
                    "type": "number"
                },
                "comments": {
                    "type": "string"
                },
                "contract_model": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_value": {
                    "type": "number"
                },
                "document": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "extra_amount_value": {
                    "type": "number"
                },
                "installment_number": {
                    "type": "integer"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "person_id": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "project_id": {
                    "type": "string"
                },
                "reseller_id": {
                    "type": "string"
                },
                "signed_at": {
                    "type": "string"
                },
                "total_amount_value": {
                    "type": "number"
                }
            }
        },
        "attachment.insertHelpDeskTicket": {
            "type": "object",
            "required": [
                "code",
                "due_date",
                "level",
                "source",
                "source_id",
                "title"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "due_date": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "level": {
                    "type": "string"
                },
                "person_id": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "source_id": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "attachment.insertInvoice": {
            "type": "object",
            "properties": {
                "amount_value": {
                    "type": "number"
                },
                "comments": {
                    "type": "string"
                },
                "contract_id": {
                    "type": "string"
                },
                "contract_title": {
                    "type": "string"
                },
                "discount_comments": {
                    "type": "string"
                },
                "discount_value": {
                    "type": "number"
                },
                "extra_amount_comments": {
                    "type": "string"
                },
                "extra_amount_value": {
                    "type": "number"
                },
                "installment_number": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "price_value",
                            "product_id",
                            "quantity",
                            "total_amount"
                        ],
                        "properties": {
                            "price_value": {
                                "type": "number"
                            },
                            "product_id": {
                                "type": "string"
                            },
                            "quantity": {
                                "type": "number"
                            },
                            "total_amount": {
                                "type": "number"
                            }
                        }
                    }
                },
                "late_invoices": {
                    "type": "boolean"
                },
                "person_id": {
                    "type": "string"
                },
                "total_amount_value": {
                    "type": "number"
                },
                "warning_comments": {
                    "type": "string"
                }
            }
        },
        "attachment.insertLabel": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "attachment.insertNotification": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "boolean"
                },
                "whatsapp": {
                    "type": "boolean"
                }
            }
        },
        "attachment.insertPayment": {
            "type": "object",
            "properties": {
                "payment": {
                    "type": "object",
                    "properties": {
                        "bank_slip": {
                            "type": "boolean"
                        },
                        "pix": {
                            "type": "boolean"
                        }
                    }
                },
                "project_name": {
                    "type": "string"
                }
            }
        },
        "attachment.insertPerson": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "label name",
                    "type": "string"
                }
            }
        },
        "attachment.insertProduct": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "code",
                            "description",
                            "value"
                        ],
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "status": {
                                "type": "boolean"
                            },
                            "title": {
                                "type": "string"
                            },
                            "value": {
                                "type": "number"
                            }
                        }
                    }
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "attachment.insertProductCategory": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "attachment.insertProject": {
            "type": "object",
            "required": [
                "content",
                "kind",
                "requirements",
                "title"
            ],
            "properties": {
                "comments": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "deliveries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "due_date": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                },
                "person_id": {
                    "type": "string"
                },
                "requirements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "attachment.insertTicketMessage": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "attachment.updateContract": {
            "type": "object",
            "required": [
                "amount_value",
                "comments",
                "contract_model",
                "description",
                "discount_value",
                "due_date",
                "extra_amount_value",
                "total_amount_value"
            ],
            "properties": {
                "amount_value": {
                    "type": "number"
                },
                "comments": {
                    "type": "string"
                },
                "contract_model": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_value": {
                    "type": "number"
                },
                "document": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "extra_amount_value": {
                    "type": "number"
                },
                "installment_number": {
                    "type": "integer"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                },
                "person_id": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                },
                "project_id": {
                    "type": "string"
                },
                "reseller_id": {
                    "type": "string"
                },
                "signed_at": {
                    "type": "string"
                },
                "total_amount_value": {
                    "type": "number"
                }
            }
        },
        "attachment.updateHelpDeskTicket": {
            "type": "object",
            "required": [
                "code",
                "due_date",
                "level",
                "source",
                "source_id",
                "title"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "due_date": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "level": {
                    "type": "string"
                },
                "person_id": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "source_id": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "attachment.updateLabel": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "attachment.updatePerson": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "label name",
                    "type": "string"
                }
            }
        },
        "attachment.updateProduct": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "code",
                            "description",
                            "value"
                        ],
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "status": {
                                "type": "boolean"
                            },
                            "title": {
                                "type": "string"
                            },
                            "value": {
                                "type": "number"
                            }
                        }
                    }
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "attachment.updateProductCategory": {
            "type": "object",
            "required": [
                "description",
                "kind",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "attachment.updateProject": {
            "type": "object",
            "required": [
                "content",
                "kind",
                "requirements",
                "title"
            ],
            "properties": {
                "comments": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "deliveries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "due_date": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "person_id": {
                    "type": "string"
                },
                "requirements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "entities.Contract": {
            "type": "object",
            "required": [
                "amount_value",
                "comments",
                "contract_model",
                "description",
                "discount_value",
                "due_date",
                "extra_amount_value",
                "total_amount_value"
            ],
            "properties": {
                "amount_value": {
                    "type": "number"
                },
                "comments": {
                    "type": "string"
                },
                "contract_model": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "discount_value": {
                    "type": "number"
                },
                "document": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "extra_amount_value": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "installment_number": {
                    "type": "integer"
                },
                "invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Invoice"
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Label"
                    }
                },
                "person": {
                    "$ref": "#/definitions/entities.Person"
                },
                "person_id": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Product"
                    }
                },
                "project": {
                    "$ref": "#/definitions/entities.Project"
                },
                "project_id": {
                    "type": "string"
                },
                "reseller_id": {
                    "type": "string"
                },
                "signed_at": {
                    "type": "string"
                },
                "total_amount_value": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.HelpDeskTicket": {
            "type": "object",
            "required": [
                "code",
                "due_date",
                "level",
                "source",
                "source_id",
                "title"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "due_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Label"
                    }
                },
                "level": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.HelpDeskTicketMessage"
                    }
                },
                "person": {
                    "$ref": "#/definitions/entities.Person"
                },
                "person_id": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/entities.Project"
                },
                "project_id": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "source_id": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.HelpDeskTicketMessage": {
            "type": "object",
            "required": [
                "description",
                "ticket_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ticket_id": {
                    "type": "string"
                }
            }
        },
        "entities.Invoice": {
            "type": "object",
            "required": [
                "amount_value",
                "code",
                "discount_value",
                "due_date",
                "extra_amount_value",
                "total_amount_value"
            ],
            "properties": {
                "amount_value": {
                    "type": "number"
                },
                "bank_slip_code": {
                    "type": "string"
                },
                "bank_slip_document": {
                    "type": "string"
                },
                "bank_slip_input_code": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "contract_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "discount_comments": {
                    "type": "string"
                },
                "discount_value": {
                    "type": "number"
                },
                "due_date": {
                    "type": "string"
                },
                "extra_amount_comments": {
                    "type": "string"
                },
                "extra_amount_value": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "installment_number": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.InvoiceItem"
                    }
                },
                "late_invoices": {
                    "type": "boolean"
                },
                "paid_at": {
                    "type": "string"
                },
                "payment_comments": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "person": {
                    "$ref": "#/definitions/entities.Person"
                },
                "person_id": {
                    "type": "string"
                },
                "pix_copy_paste": {
                    "type": "string"
                },
                "pix_qr_code": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "total_amount_value": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "warning_comments": {
                    "type": "string"
                }
            }
        },
        "entities.InvoiceItem": {
            "type": "object",
            "required": [
                "price_value",
                "quantity",
                "total_amount"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "string"
                },
                "invoice_id": {
                    "type": "string"
                },
                "price_value": {
                    "type": "number"
                },
                "product": {
                    "$ref": "#/definitions/entities.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number"
                },
                "total_amount": {
                    "type": "number"
                }
            }
        },
        "entities.Label": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.Person": {
            "type": "object",
            "required": [
                "document",
                "name"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.PersonAddress"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "document": {
                    "type": "string"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.PersonEmail"
                    }
                },
                "id": {
                    "type": "string"
                },
                "main_person_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "phones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.PersonPhone"
                    }
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.PersonAddress": {
            "type": "object",
            "required": [
                "address",
                "city",
                "country",
                "neighborhood",
                "person_id",
                "state",
                "zip_code"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "string"
                },
                "is_main": {
                    "type": "boolean"
                },
                "neighborhood": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "person_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "entities.PersonEmail": {
            "type": "object",
            "required": [
                "person_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_main": {
                    "type": "boolean"
                },
                "person_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.PersonPhone": {
            "type": "object",
            "required": [
                "area_code",
                "country_code",
                "person_id",
                "phone_number"
            ],
            "properties": {
                "area_code": {
                    "type": "integer"
                },
                "country_code": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "string"
                },
                "is_main": {
                    "type": "boolean"
                },
                "is_whatsapp": {
                    "type": "boolean"
                },
                "person_id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.Product": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.ProductCategory"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.ProductPrice"
                    }
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.ProductCategory": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Product"
                    }
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.ProductPrice": {
            "type": "object",
            "required": [
                "code",
                "description",
                "value"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "entities.Project": {
            "type": "object",
            "required": [
                "content",
                "kind",
                "requirements",
                "title"
            ],
            "properties": {
                "comments": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "deliveries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "due_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Label"
                    }
                },
                "person": {
                    "$ref": "#/definitions/entities.Person"
                },
                "person_id": {
                    "type": "string"
                },
                "requirements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "helpers.Error": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "payload": {
                    "type": "object",
                    "required": [
                        "code",
                        "details",
                        "message"
                    ],
                    "properties": {
                        "code": {
                            "type": "integer",
                            "example": 500
                        },
                        "details": {
                            "type": "string",
                            "example": "error details"
                        },
                        "message": {
                            "type": "string",
                            "example": "error message"
                        }
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "helpers.ResponseMany-array_entities_Contract": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/utils.Pagination"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Contract"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseMany-array_entities_HelpDeskTicket": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/utils.Pagination"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.HelpDeskTicket"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseMany-array_entities_HelpDeskTicketMessage": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/utils.Pagination"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.HelpDeskTicketMessage"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseMany-array_entities_Invoice": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/utils.Pagination"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Invoice"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseMany-array_entities_Label": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/utils.Pagination"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Label"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseMany-array_entities_Person": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/utils.Pagination"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Person"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseMany-array_entities_Product": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/utils.Pagination"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Product"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseMany-array_entities_ProductCategory": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/utils.Pagination"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.ProductCategory"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseMany-array_entities_Project": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/utils.Pagination"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Project"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseNone": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseOne-entities_Contract": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "payload": {
                    "$ref": "#/definitions/entities.Contract"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseOne-entities_HelpDeskTicket": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "payload": {
                    "$ref": "#/definitions/entities.HelpDeskTicket"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseOne-entities_HelpDeskTicketMessage": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "payload": {
                    "$ref": "#/definitions/entities.HelpDeskTicketMessage"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseOne-entities_Invoice": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "payload": {
                    "$ref": "#/definitions/entities.Invoice"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseOne-entities_Label": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "payload": {
                    "$ref": "#/definitions/entities.Label"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseOne-entities_Person": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "payload": {
                    "$ref": "#/definitions/entities.Person"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseOne-entities_Product": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "payload": {
                    "$ref": "#/definitions/entities.Product"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseOne-entities_ProductCategory": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "payload": {
                    "$ref": "#/definitions/entities.ProductCategory"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseOne-entities_Project": {
            "type": "object",
            "required": [
                "success"
            ],
            "properties": {
                "payload": {
                    "$ref": "#/definitions/entities.Project"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "utils.Pagination": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "pages": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "total_pages": {
                    "type": "integer"
                },
                "total_registers": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9000",
	BasePath:         "/v1",
	Schemes:          []string{"http", "https"},
	Title:            "The Mug Codes",
	Description:      "Welcome to the official documentation for the The Mug Codes manager. This guide provides comprehensive information to integrate and utilize our API effectively. It includes details on authentication, endpoints, rate limits, error handling, best practices, and support. Whether you're a beginner or an experienced developer, this documentation serves as your roadmap to leverage our services seamlessly.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
